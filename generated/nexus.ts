/**
 * This file was automatically generated by Nexus 0.11.3
 * Do not make changes to this file directly
 */




declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  ProductCreateInput: { // input type
    color: string; // String!
    name: string; // String!
    price: number; // Float!
    size: string; // String!
  }
  ProductWhereUniqueInput: { // input type
    id?: string | null; // ID
  }
}

export interface NexusGenEnums {
}

export interface NexusGenRootTypes {
  Mutation: {};
  Product: { // root type
    color: string; // String!
    id: string; // ID!
    name: string; // String!
    price: number; // Float!
    size: string; // String!
  }
  Query: {};
  String: string;
  Int: number;
  Float: number;
  Boolean: boolean;
  ID: string;
}

export interface NexusGenAllTypes extends NexusGenRootTypes {
  ProductCreateInput: NexusGenInputs['ProductCreateInput'];
  ProductWhereUniqueInput: NexusGenInputs['ProductWhereUniqueInput'];
}

export interface NexusGenFieldTypes {
  Mutation: { // field return type
    createProduct: NexusGenRootTypes['Product']; // Product!
  }
  Product: { // field return type
    color: string; // String!
    id: string; // ID!
    name: string; // String!
    price: number; // Float!
    size: string; // String!
  }
  Query: { // field return type
    product: NexusGenRootTypes['Product'] | null; // Product
  }
}

export interface NexusGenArgTypes {
  Mutation: {
    createProduct: { // args
      data: NexusGenInputs['ProductCreateInput']; // ProductCreateInput!
    }
  }
  Query: {
    product: { // args
      where: NexusGenInputs['ProductWhereUniqueInput']; // ProductWhereUniqueInput!
    }
  }
}

export interface NexusGenAbstractResolveReturnTypes {
}

export interface NexusGenInheritedFields {}

export type NexusGenObjectNames = "Mutation" | "Product" | "Query";

export type NexusGenInputNames = "ProductCreateInput" | "ProductWhereUniqueInput";

export type NexusGenEnumNames = never;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = "Boolean" | "Float" | "ID" | "Int" | "String";

export type NexusGenUnionNames = never;

export interface NexusGenTypes {
  context: any;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  allTypes: NexusGenAllTypes;
  inheritedFields: NexusGenInheritedFields;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractResolveReturn: NexusGenAbstractResolveReturnTypes;
}